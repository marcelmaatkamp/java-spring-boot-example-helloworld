buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
        classpath "org.codehaus.groovy:groovy-all:2.3.6"
        classpath "nl.eveoh:gradle-aspectj:1.6"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.0.0"
        classpath 'com.bmuschko:gradle-docker-plugin:3.2.1'
    }
}

plugins { 
 id 'org.springframework.boot' version '1.5.9.RELEASE' 
 id "com.bmuschko.nexus" version "2.3.1"
}

apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin

allprojects {
 apply plugin: 'application'
 apply plugin: 'java'
 apply plugin: 'eclipse'
 apply plugin: 'idea'
 apply plugin: 'war'
 apply plugin: "org.springframework.boot"
 apply plugin: 'com.bmuschko.docker-remote-api'
 apply plugin: 'com.bmuschko.docker-java-application'

 // -agentlib:jdwp=transport=dt_socket,server=y,address=8000,suspend=n
 docker {
  url = "unix:///var/run/docker.sock"
  javaApplication {
   baseImage = 'anapsix/alpine-java:jre8'
   maintainer = 'Marcel Maatkamp <m.maatkamp@gmail.com>'
   registryCredentials {
    url = 'https://nexus:5000'
    username = 'admin'
    password = 'admin123'
    email = 'm.maatkamp@gmail.com'
   }
   ports = [5005,8080]
// tag = 'jettyapp:1.115'
  }
 }

 repositories {
  maven { url 'https://nexus/repository/remote-repos/' }
 }

    sourceSets {
        testIntegration {
            java.srcDir file('src/testIntegration/java')
            resources.srcDir file('src/testIntegration/resources')
            compileClasspath += sourceSets.main.runtimeClasspath
        }
    }

    test {
        testLogging.showStandardStreams = true
    }

    task testJar(type: Jar, dependsOn: testClasses) {
        baseName = "test-${project.archivesBaseName}"
        from sourceSets.test.output
    }

    configurations {
        tests
        published
    }

    artifacts {
        tests testJar
    }

    tasks.withType(Jar) {
        baseName = "${rootProject.name}-${project.name}"
    }

    tasks.withType(Zip) {
        baseName = "${rootProject.name}-${project.name}"
    }

    group = "java/spring-boot-example"
    version = "1.0"
    project.version = '1.0'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    task wrapper(type: Wrapper) {
      gradleVersion = '4.3.1'
    }

    bootRepackage {
        enabled = false
    }

    jar {
        zip64 = true
    }

    mainClassName = 'application.Application'

    compileJava {
      options.fork = true  
      options.forkOptions.setMemoryMaximumSize("4g") 
   }

    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

 nexus {
  sign = false
  repositoryUrl = 'https://nexus/repository/maven-releases'
  snapshotRepositoryUrl = 'https://nexus/repository/maven--snapshots'
 }

}

dependencies {
 compile("org.springframework.boot:spring-boot-starter-web") {
  exclude module: "spring-boot-starter-tomcat"
 }
 compile("org.springframework.boot:spring-boot-starter-amqp")
 compile("org.springframework.boot:spring-boot-starter-jetty")
 compile("org.springframework.boot:spring-boot-starter-actuator")
 compile('org.projectlombok:lombok')

 testCompile("org.springframework.boot:spring-boot-starter-test")
 testCompile("junit:junit")
}

